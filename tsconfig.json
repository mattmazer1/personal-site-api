{
	"compilerOptions": {
		"target": "es2020" /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */,
		// "moduleDetection": "auto",                        /* Control what method is used to detect module-format JS files. */
		"module": "ESNext" /* Specify what module code is generated. */,
		"moduleResolution": "node16" /* Specify how TypeScript looks up a file from a given module specifier. */,
		"outDir": "./dist" /* Specify an output folder for all emitted files. */,
		"esModuleInterop": true /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */,
		"forceConsistentCasingInFileNames": true /* Ensure that casing is correct in imports. */,
		"strict": true /* Enable all strict type-checking options. */,
		"strictNullChecks": true /* When type checking, take into account 'null' and 'undefined'. */,
		// "strictFunctionTypes": true,                      /* When assigning functions, check to ensure parameters and the return values are subtype-compatible. */
		"alwaysStrict": true /* Ensure 'use strict' is always emitted. */,
		"noUnusedLocals": true /* Enable error reporting when local variables aren't read. */,
		"noUnusedParameters": true /* Raise an error when a function parameter isn't read. */,
		"skipLibCheck": true /* Skip type checking all .d.ts files. */
	},
	"include": ["src/**/*"],
	"exclude": ["node_modules", "dist"]
}
